{"version":3,"sources":["src/components/layout/SignedInLinks.js","src/store/actions/authActions.js","src/components/layout/SignedOutLinks.js","src/components/layout/Navbar.js","src/components/dashboard/Notifications.js","src/components/projects/ProjectSummary.js","src/components/projects/ProjectList.js","src/components/dashboard/Dashboard.js","src/components/projects/ProjectDetails.js","src/components/auth/SignIn.js","src/components/auth/SignUp.js","src/components/projects/CreateProject.js","src/store/actions/projectActions.js","App.js","serviceWorker.js","src/store/reducers/authReducer.js","src/store/reducers/projectReducer.js","src/store/reducers/rootReducer.js","src/config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLInks","state","firebase","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ea32b0a8.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLInks = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to = '/create'>New Project</NavLink></li>\n         {/* <li><NavLink to = '/'>Log Out</NavLink></li>  */}\n\n            <li><a onClick= {props.signOut}>Log Out</a></li>\n\n            <li><NavLink to = '/' className= \"btn btn-floating pink lighten-1  \">\n            {props.profile.initials}\n            </NavLink></li>\n        </ul>\n        \n    )\n}\n\n const mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLInks);","export const signIn = (credentials) => {\n    return(dispatch,getState,{getFirebase}) => {\n\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) =>{\n            dispatch({type: 'LOGIN_ERROR', err});\n        })\n    }\n\n}\n\nexport const signOut = () => {\n    return(dispatch,getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'});\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return(dispatch,getState, {getFirebase, getFirestore}) =>{\n        const firestore = getFirestore();\n        const firebase = getFirebase();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) =>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch((err) => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLInks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to = '/signup'>Signup</NavLink></li>\n            <li><NavLink to = '/signin'>Login</NavLink></li>\n            \n        </ul>\n        \n    )\n}\n\nexport default SignedOutLInks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLInks from './SignedInLinks';\nimport SignedOutLInks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth,profile } = props;\n    // console.log(auth);\n\n    const links = auth.uid ? <SignedInLInks profile= {profile}/> : <SignedOutLInks />;\n\n    return (\n        <nav className=\"nav-wrapper grey darken-4 \">\n            <div className=\"container\">\n                < Link to='/' className=\"brand-logo\"> UPlan </Link>\n                {/* <SignedInLInks />\n                <SignedOutLInks /> */}\n\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        auth: state.firebase.auth, \n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) =>{\nconst {notifications} = props;\nreturn(\n    <div className=\"section\">\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\"> Notifications </span>\n                <ul className=\"notifications\">\n                {notifications && notifications.map(notification => {\n                    return (\n                        <li key ={notification.id}>\n                            <span className=\"pink-text\">{notification.user}  </span>\n                            <span>{notification.content}</span>\n                            <div className=\"grey-text note-date\">\n                             {moment(notification.time.toDate()).fromNow()}\n                            </div>\n                        </li>\n                    )\n\n                    }\n                )}\n                </ul>\n              \n            </div>\n        </div>\n    </div>\n)\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return(\n        <div className=\"card z-depth-1 project-summary\">\n                <div className=\"card-content grey-text text-darken-4\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.authorFirstName}{project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom';\n\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className=\"project-List section\">\n\n        { projects && projects.map(project => {\n            return(\n                <Link to= {'/project/' + project.id} key = {project.id}>\n                <ProjectSummary project= {project}  />\n                </Link>\n            )\n        })}\n            {/* <ProjectSummary /> */}\n\n            </div>\n    )             \n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport {compose} from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component{\n    \n    render(){\n        // console.log(this.props);\n        const {projects, auth, notifications} = this.props;\n        if(!auth.uid) return <Redirect to='/signin'/>\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects= {projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications  notifications= {notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n        // projects: state.project.projects\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ]))\n    (Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  //const id = props.match.params.id;\n  const { project, auth } = props;\n\n\n  if (!auth.uid) return <Redirect to='/signin' />\n\n  if (project) {\n    return (\n      <div className=\"container section\">\n        <div className=\"card z-depth-1\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p> Loading project.....</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  //console.log(state)\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }])\n)(ProjectDetails);\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {signIn} from '../../store/actions/authActions.js';\nimport { Redirect } from 'react-router-dom';\n\n class SignIn extends Component {\n     state = {\n         email: '',\n         password: ''\n     }\n     handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n     }\n     handleSubmit = (e) =>{\n        e.preventDefault();\n    //    console.log(this.state);\n    this.props.signIn(this.state);\n\n     }\n  render() {\n    const  {authError,auth} = this.props;\n\n    if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n              <div className=\"input-field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <label htmlFor=\"password\">Pasword</label>\n                  <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n              </div>\n              \n              <div className=\"input-field\">\n                  <button className=\"btn pink lighten-2 z-depth-0\">Login</button>\n                  <div className=\"red-text center\">\n                      { authError ? <p>{authError}</p>:null }\n                  </div>\n              </div>\n          </form>\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\n","\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) =>{\n       this.setState({\n           [e.target.id]: e.target.value\n       })\n    }\n    handleSubmit = (e) =>{\n       e.preventDefault();\n     // console.log(this.state);\n     this.props.signUp(this.state);\n    }\n render() {\n\n    const { auth,authError } = this.props;\n\n   if(auth.uid) return <Redirect to='/' />\n\n   return (\n     <div className=\"container\">\n         <form onSubmit={this.handleSubmit} className=\"white\">\n             <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n             <div className=\"input-field\">\n                 <label htmlFor=\"email\">Email</label>\n                 <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n             </div>\n             <div className=\"input-field\">\n                 <label htmlFor=\"password\">Pasword</label>\n                 <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n             </div>\n             <div className=\"input-field\">\n                 <label htmlFor=\"firstName\">First Name</label>\n                 <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n             </div>\n             <div className=\"input-field\">\n                 <label htmlFor=\"lastName\">Last Name</label>\n                 <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n             </div>\n             \n             <div className=\"input-field\">\n                 <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\n                 <div className=\"red-text center\">\n                     {authError  ? <p>{authError}</p> : null}\n                 </div>\n             </div>\n         </form>\n     </div>\n\n   )\n }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject }from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state= {\n        title: '',\n        content:''\n    }\n    handleChange= (e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state)\n        this.props.history.push('/');\n    }\n  render() {\n      const { auth } = this.props;\n      if(!auth.uid) return <Redirect to= '/signin' />\n    return (\n      <div className=\"container\">\n          <form onSubmit= {this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n              <div className=\"input-field\">\n                  <label htmlFor=\"title\">Title</label>\n                  <input type=\"text\" id=\"title\" onChange= {this.handleChange}/>\n              </div>\n              <div className=\"input-field\">\n                  <label htmlFor=\"content\">Content</label>\n                  <textarea id=\"content\" className=\"materialize-textarea\" onChange= {this.handleChange}></textarea>\n              </div>\n              <div className=\"input-field\">\n                  <button className=\"btn pink lighten-1\" >Create</button>\n              </div>\n          </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth : state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);\n\n","export const createProject = (project) => {\n    return(dispatch,getState,{ getFirebase, getFirestore }) => {\n            // make async call to database\n\n            const firestore = getFirestore();\n            const profile = getState().firebase.profile;\n            const authorId = getState().firebase.auth.uid;\n            firestore.collection('projects').add({\n                ...project,\n                authorFirstName: profile.firstName,\n                authorLastName: profile.lastName,\n                authorId: authorId,\n                createdAt: new Date()\n\n            }).then(() =>{\n                dispatch({type: 'CREATE_PROJECT', project:project});\n            }).catch((err) =>{\n                dispatch({type: 'CREATE_PROJECT_ERROR', err});  \n            })\n        \n    }\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './src/components/layout/Navbar';\nimport Dashboard from './src/components/dashboard/Dashboard';\nimport ProjectDetails from './src/components/projects/ProjectDetails';\nimport SignIn from './src/components/auth/SignIn';\nimport SignUp from './src/components/auth/SignUp';\nimport CreateProject from './src/components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n     <Navbar/>\n    <Switch>\n      <Route exact path= '/' component= {Dashboard} />  \n      <Route path= '/project/:id' component= {ProjectDetails}/>\n      <Route path= '/signin' component= {SignIn} />\n      <Route path= '/signup' component= {SignUp} />\n      <Route path= '/create' component = {CreateProject} />\n    </Switch>\n\n    </div>\n    </BrowserRouter>  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('Login failed');\n\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('LogOut Succcess');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('SignUp success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup failed');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        { id: '1', title: 'Egg hunt', content: 'blah blah blah' },\n        { id: '2', title: 'Egg hunt', content: 'blah blah blah' },\n        { id: '3', title: 'Egg hunt', content: 'blah blah blah' }\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n\n}\n\nexport default projectReducer;","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport {firestoreReducer} from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// Initialize firebase\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBz23s2vqHJBV-Q0kw1k_c6mflkYl7yzVs\",\n    authDomain: \"marioplan-5d135.firebaseapp.com\",\n    databaseURL: \"https://marioplan-5d135.firebaseio.com\",\n    projectId: \"marioplan-5d135\",\n    storageBucket: \"marioplan-5d135.appspot.com\",\n    messagingSenderId: \"492006777705\",\n    appId: \"1:492006777705:web:abaf8a910efe052e7b13f8\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './src/store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './src/config/fbConfig';\n\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users',attachAuthIsReady: true})\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}